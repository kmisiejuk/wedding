@font-face {
  font-family: hallie2;
  src: url(./fonts/Halliethompsonserifdemo.ttf) format('truetype');
}
@font-face {
  font-family: cormorant;
  src: url(./fonts/CormorantGaramond-Medium.ttf) format('truetype');
}
@font-face {
  font-family: opensans;
  src: url(./fonts/OpenSans-Light.ttf) format('truetype');
}
*,
:after,
:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
html {
  font-size: 62.5%;
  scroll-behavior: smooth;
  scroll-padding-top: 8vh;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  overflow-x: hidden;
}
a {
  text-decoration: none;
  color: inherit;
  z-index: 1;
}
h2.section__heading {
  padding: 1em;
  font-size: 2.8rem;
}
h2.section__heading,
h3.section__subheading {
  text-align: center;
  text-transform: uppercase;
  font-weight: lighter;
  font-family: cormorant;
}
h3.section__subheading {
  padding: 1.5em;
  font-size: 2rem;
}
.section {
  margin: 5em 0;
}
.wrapper {
  padding: 0 1em;
}
.main {
  display: flex;
  flex-direction: column;
  margin: 1em auto;
  width: 100%;
  max-width: 1400px;
  font-size: 1.5rem;
  font-family: opensans;
  font-weight: 400;
}
.main .instructions .steps {
  padding: 1em;
  width: 100%;
  max-width: 1200px;
  background-color: #fff;
  box-shadow: 5px 5px 5px #d0dce8;
}
.main .instructions .steps .step {
  width: 100%;
  margin: 1em 0;
  overflow: hidden;
}
.main .instructions .steps .step__header {
  position: relative;
  display: inline-block;
  padding: 0.5em 1em;
  background-color: #d0dce8;
  color: #fff;
  font-size: 2rem;
  font-family: cormorant;
  transition: transform 0.5s;
}
.main .instructions .steps .step__header:after {
  position: absolute;
  content: '';
  bottom: 0;
  left: 0;
  width: 90vw;
  height: 1px;
  background-color: #d0dce8;
  transition: transform scale 0.5s 0.5s;
}
.main .instructions .steps .step__content {
  display: flex;
  margin: 1em 0;
}
.main .instructions .steps .step__content-img {
  max-height: 20vw;
  width: 28vw;
  margin-left: 0;
}
.main .instructions .steps .step__content-img img {
  height: 100%;
  width: 100%;
}
.main .instructions .steps .step__content-list {
  list-style: none;
  margin-left: 10%;
}
.main .patterns {
  margin: 3em 0;
}
.main .patterns .swiper {
  padding-bottom: 1em;
  width: 90%;
  height: 70vh;
}
.main .patterns .swiper-slide {
  display: flex;
  justify-content: center;
  align-items: center;
  background: #fff;
}
.main .patterns .swiper-slide img {
  display: block;
  width: 100%;
  height: 98%;
  object-fit: contain;
}
.main .oferts {
  display: flex;
  justify-content: start;
  align-items: center;
  flex-direction: column;
  height: 100vh;
}
.main .oferts .slides {
  display: flex;
  flex-direction: column;
  padding: 0.5em;
  width: 100%;
  height: 80%;
  box-shadow: 5px 5px 5px #d0dce8;
}
.main .oferts .slides .slide {
  position: relative;
  flex-grow: 0.7;
  height: 10%;
  min-height: 5rem;
  margin: 0.5em;
  padding: 0 0.5em;
  border-radius: 2px;
  overflow: hidden;
  transition: flex-grow 0.5s;
  cursor: pointer;
}
.main .oferts .slides .slide:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0.5;
}
.main .oferts .slides .slide.standard:before {
  background-color: #d0dce8;
}
.main .oferts .slides .slide.premium:before {
  background-color: #e8dcd0;
}
.main .oferts .slides .slide.deluxe:before {
  background-color: #d7c3ae;
}
.main .oferts .slides .slide__text {
  position: relative;
  z-index: 3;
}
.main .oferts .slides .slide__text-heading {
  display: flex;
  justify-content: center;
  padding: 1em 0;
  margin-bottom: 1em;
  border-bottom: 1px solid rgba(0, 0, 0, 0.5);
  text-transform: uppercase;
  font-family: cormorant;
  font-size: 2rem;
}
.main .oferts .slides .slide.active {
  flex-grow: 20;
}
.main .oferts .slides .slide .slide__text.active p {
  animation: a 1s 0.6s both;
}
@keyframes a {
  to {
    background-color: rgba(0, 0, 0, 0.4);
  }
}
.contact {
  position: relative;
  background-color: #e8dcd0;
  box-shadow: 5px 5px 5px #d0dce8;
}
.contact .form {
  display: flex;
  align-items: start;
  justify-content: center;
  flex-direction: column;
  font-family: opensans;
  padding: 1em;
  font-size: 1.2rem;
}
.contact .form__heading {
  color: #fff;
  border-bottom: 1px solid #fff;
}
.contact .form__spacer {
  margin: 1rem 0;
}
.contact .form__label {
  text-transform: uppercase;
}
.contact .form__input {
  width: 100%;
}
.contact .form__input,
.contact .form__message {
  border: 2px solid #fff;
  padding: 0.5rem;
  font-size: inherit;
}
.contact .form__message {
  min-width: 100%;
  max-width: 100%;
  min-height: 15em;
  font-family: inherit;
}
.contact .form__submit {
  align-self: center;
  color: #fff;
  font-size: 2rem;
}
.contact__message-status {
  display: none;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: fixed;
  top: 25%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 70%;
  height: 30%;
  background-color: #d7c3ae;
  border: 4px solid #fff;
}
.contact__message-status-icon {
  margin: 1em;
  width: 4rem;
  height: 4rem;
}
.contact__message-status-info {
  padding: 0.5em;
  text-align: center;
  font-size: 2rem;
  color: #fff;
  text-transform: uppercase;
  font-family: cormorant;
}
.btn,
.header__btn {
  position: relative;
  padding: 0.5em 2em;
  background-color: transparent;
  border: 2px solid transparent;
  cursor: pointer;
}
.btn {
  text-transform: uppercase;
  font-family: serif;
  border-color: transparent;
  transition: border-color 0.3s;
}
.btn:focus,
.btn:hover {
  outline: none;
  border-color: #fff;
}
.header__btn:after,
.header__btn:before {
  position: absolute;
  height: 50%;
  width: 10%;
  content: '';
  transition: width 0.3s, height 0.3s;
}
.header__btn:after {
  top: 0;
  left: 0;
  border-left: 3px solid #fff;
  border-top: 3px solid #fff;
}
.header__btn:before {
  bottom: 0;
  right: 0;
  border-bottom: 3px solid #fff;
  border-right: 3px solid #fff;
}
.header__btn:focus {
  outline: none;
}
.header__btn:focus:after,
.header__btn:focus:before,
.header__btn:hover:after,
.header__btn:hover:before {
  outline: none;
  height: 100%;
  width: 100%;
}
@keyframes b {
  0% {
    transform: translateY(200%);
  }
  to {
    transform: translateY(0);
  }
}
.nav {
  position: fixed;
  justify-content: space-between;
  padding: 0.8em;
  height: 6.5vh;
  width: 100vw;
  z-index: 4;
}
.nav,
.nav__items {
  top: 0;
  display: flex;
  align-items: center;
  background-color: #d7c3ae;
}
.nav__items {
  position: absolute;
  justify-content: space-evenly;
  flex-direction: column;
  margin: 0.8em auto;
  width: 90%;
  right: 0;
  height: 100vh;
  width: 100vw;
  color: #fff;
  transform: translateY(-120%);
  transition: transform 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
}
.nav__items--active {
  transform: translateY(0);
}
.nav__item {
  position: relative;
  font-size: 2rem;
  text-transform: uppercase;
  font-family: cormorant;
}
.nav__name {
  display: none;
  font-family: hallie2;
  font-size: 2.2rem;
  letter-spacing: 3px;
  border-bottom: 1px solid #fff;
  opacity: 0;
}
.nav .logo {
  margin-top: 0.5em;
  width: 15rem;
  height: 15rem;
  border-radius: 50%;
  border: 4px solid #e8dcd0;
}
.nav .burger-btn {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  left: 0.5em;
  width: 5rem;
  height: 3rem;
  color: #fff;
  background-color: transparent;
  border: 2px solid transparent;
  border-radius: 5%;
  cursor: pointer;
  transition: all 0.5s ease-in-out;
  z-index: 5;
}
.nav .burger-btn__bars {
  position: relative;
  width: 60%;
  height: 2px;
  background-color: #fff;
  border-radius: 5px;
  transition: all 0.5s ease-in-out;
}
.nav .burger-btn__bars:after,
.nav .burger-btn__bars:before {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #fff;
  border-radius: 5px;
  transition: all 0.5s ease-in-out;
}
.nav .burger-btn__bars:before {
  transform: translateY(-11px);
}
.nav .burger-btn__bars:after {
  transform: translateY(11px);
}
.nav .open {
  transform: translateX(0);
  background-color: transparent;
}
.nav .open:before {
  transform: rotate(45deg);
}
.nav .open:after {
  transform: rotate(-45deg);
}
.nav-animation {
  animation: b 0.5s both;
}
.header {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  height: 100vh;
  width: 100%;
  background-image: linear-gradient(180deg, #d7c2ad 40%, #dfcfbe 70%, #e7dbcf);
}
.header h1 {
  margin-bottom: 0.5em;
  max-width: 90%;
  color: #fff;
  text-align: center;
  font-size: 4rem;
  font-family: hallie2, serif;
  font-weight: 100;
  letter-spacing: 5px;
}
.header a {
  height: 0;
  margin: 0;
}
.header a:focus,
.header a:hover {
  outline: none;
}
.header__btn {
  margin-top: 2em;
  padding: 1em 2em;
  color: #fff;
  font-size: 1.5rem;
  font-family: opensans;
  text-transform: uppercase;
}
footer {
  position: relative;
  font-family: sans-serif;
  background-color: #d0dce8;
  width: 100vw;
  overflow: hidden;
}
footer .footer {
  display: flex;
  justify-content: center;
  align-items: center;
}
footer .footer__container {
  display: flex;
  justify-content: center;
  align-items: start;
  flex-direction: column;
  padding: 0.1rem 1em;
  width: 100%;
  margin: 0.5em 0;
}
footer .footer__icon-box {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.5em 0;
  font-family: opensans;
  font-size: 1.3rem;
  transition: scale 0.2s;
}
footer .footer__info-icon {
  margin: 0.3em;
  width: 2.5rem;
  height: 2.5rem;
  z-index: 2;
  transition: scale 0.2s;
  cursor: pointer;
}
footer .footer__info-icon :focus,
footer .footer__info-icon:hover {
  scale: 1.15;
}
footer .footer__logo {
  position: absolute;
  right: -5%;
  top: calc(50% - 12em);
  z-index: 0;
}
footer .footer__logo-icon {
  width: 15em;
  height: 15em;
}
footer .footer__company-name {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  height: 3em;
  font-size: 1.3rem;
  font-family: hallie2;
  font-weight: 700;
}
footer .footer__company-name:after {
  content: '';
  position: absolute;
  display: block;
  height: 1px;
  width: 100vw;
  top: 0;
  border-top: 1px solid #000;
  font-family: sans-serif;
}
footer .footer__company-name-year {
  margin-right: 0.5em;
}
@media (min-width: 300px) {
  .header h1 {
    font-size: 2rem;
  }
  .header__btn {
    font-size: 1.3rem;
  }
}
@media (min-width: 300px) {
  h2.section__heading {
    font-size: 3.5rem;
  }
  .header h1 {
    font-size: 4.8rem;
  }
  .header__btn {
    font-size: 1.5rem;
  }
  footer .footer__container {
    padding: 0.1rem 3rem;
  }
  footer .footer__logo {
    right: 0;
  }
}
@media (min-width: 576px) {
  h2.section__heading {
    padding: 1em 0;
    font-size: 4rem;
  }
  h3.section__subheading {
    font-size: 2.3rem;
  }
  .nav .burger-btn {
    height: 70px;
    width: 70px;
  }
  .header h1 {
    font-size: 8rem;
  }
  .header__btn {
    font-size: 1.8rem;
  }
  footer .footer__container {
    padding: 0 5rem;
  }
  footer .footer__icon-box {
    font-size: 1.5rem;
  }
  footer .footer__logo {
    top: calc(50% - 17em);
    right: 0;
  }
  footer .footer__logo-icon {
    width: 30em;
    height: 30em;
  }
}
@media (min-width: 768px) {
  .nav {
    height: 7vh;
  }
  .header h1 {
    font-size: 9rem;
  }
  .header__btn {
    margin-top: 3em;
    font-size: 2rem;
  }
  footer .footer__container {
    padding: 0.5rem 6rem;
  }
  footer .footer__icon-box {
    padding: 0.5em 0;
  }
  footer .footer__logo {
    right: 5%;
    top: calc(50% - 17em);
  }
  footer .footer__logo-icon {
    width: 30em;
    height: 30em;
  }
}
@media (min-width: 992px) {
  h2.section__heading {
    font-size: 4.4rem;
  }
  h3.section__subheading {
    padding: 0.5em 0 1.5em;
    font-size: 2.6rem;
  }
  .wrapper {
    padding: 0 3em;
  }
  .wrapper h2.section__heading {
    font-size: 4rem;
  }
  .nav {
    height: 8vh;
  }
  .nav__item--mobile,
  .nav__item--mobile__mobile-name {
    display: none;
  }
  .nav__items {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    width: 55%;
    height: 100%;
    top: 0;
    transform: translateY(0);
  }
  .nav__item {
    margin: 0 1rem;
    white-space: nowrap;
  }
  .nav .logo {
    position: absolute;
    top: -10%;
    left: -35%;
    width: 12rem;
    height: 12rem;
    border-radius: 50%;
  }
  .nav__name {
    opacity: 1;
  }
  .nav .burger-btn,
  .nav__name {
    display: none;
  }
  .main .oferts .slides .slide {
    margin: 0.5em;
    padding: 0 0.5em;
  }
  .main .oferts .slides .slide__text-heading {
    padding: 0.75em 0 1em;
    font-size: 2.4rem;
  }
  .contact {
    padding: 0 2em;
  }
  .contact .form {
    font-size: 1.5rem;
    align-items: center;
  }
  .contact .form__input {
    width: 65%;
  }
  .contact .form__message {
    max-width: 70%;
    min-width: 70%;
  }
  .contact__message-status-icon {
    width: 5rem;
    height: 5rem;
  }
  .contact__message-status-info {
    font-size: 3rem;
  }
  footer .footer__container {
    padding: 0.5rem 12rem;
  }
  footer .footer__logo {
    right: 10%;
  }
}
@media (min-width: 1200px) {
  footer .footer__container {
    padding: 0.5rem 14rem;
  }
  .main .instructions .steps .step__content-img {
    max-height: 17vw;
    width: 17vw;
  }
}
@media (min-width: 1400px) {
  h3.section__subheading {
    padding: 0.6em 0 0.8em;
  }
  .wrapper {
    padding: 0 8em;
  }
  .nav .logo {
    left: -34%;
  }
  .header h1 {
    font-size: 10rem;
  }
  .header__btn {
    font-size: 2rem;
  }
  footer .footer__container {
    padding: 0.5rem 20em;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxpdGllcy9fZm9udHMuc2NzcyIsInN0eWxlLmNzcyIsInV0aWxpdGllcy9fcmVzZXQuc2NzcyIsInV0aWxpdGllcy9fbWFpbi5zY3NzIiwidXRpbGl0aWVzL19jb2xvcnMuc2NzcyIsInV0aWxpdGllcy9fYnV0dG9ucy5zY3NzIiwidXRpbGl0aWVzL19hbmltYXRpb24uc2NzcyIsInN0eWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsV0FDRSxvQkFBQSxBQUNBLDZEQUFBLENDQUYsQURFQSxXQUNFLHNCQUFBLEFBQ0EsOERBQUEsQ0NBRixBREVBLFdBQ0UscUJBQUEsQUFDQSxvREFBQSxDQ0FGLEFET0EsV0FDRSxvQkFBQSxBQUNBLHVFQUFBLENDREYsQURHQSxXQUNFLHNCQUFBLEFBQ0Esd0VBQUEsQ0NERixBRElBLFdBQ0UscUJBQUEsQUFDQSw0RUFBQSxDQ0ZGLEFDM0JBLGlCQUdFLHNCQUFBLEFBQ0EsU0FBQSxBQUNBLFNBQUEsQ0Q2QkYsQUMxQkEsS0FDRSxnQkFBQSxBQUNBLHVCQUFBLEFBQ0Esc0JBQUEsQ0Q2QkYsQUMxQkEsS0FDRSxhQUFBLEFBQ0EsdUJBQUEsQUFDQSxtQkFBQSxBQUNBLHNCQUFBLEFBQ0EsaUJBQUEsQ0Q2QkYsQUMzQkEsRUFDRSxxQkFBQSxBQUNBLGNBQUEsQUFDQSxTQUFBLENEOEJGLEFDM0JBLG9CQUNFLFlBQUEsQUFFQSxnQkFBQSxDRGlDRixBQzNCQSwyQ0FQRSxrQkFBQSxBQUVBLHlCQUFBLEFBQ0Esb0JBQUEsQUFDQSxxQkFBQSxDQUdGLEFEb0NBLHVCQ25DRSxjQUFBLEFBRUEsY0FBQSxDRGlDRixBQzVCQSxTQUNFLFlBQUEsQ0QrQkYsQUM3QkEsU0FDRSxhQUFBLENEZ0NGLEFFN0VBLE1BQ0UsYUFBQSxBQUNBLHNCQUFBLEFBQ0EsZ0JBQUEsQUFFQSxXQUFBLEFBQ0EsaUJBQUEsQUFDQSxpQkFBQSxBQUNBLHFCQUFBLEFBQ0EsZUFBQSxDRitFRixBRXhFSSwyQkFFRSxZQUFBLEFBQ0Es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QUFDQSxjQUFBLENOcVVSLEFNblVVLDJDQUNFLG9CQUFBLEFBQ0EsZ0JBQUEsQ05xVVosQU03VEEsU0FDRSxhQUFBLENOK1RGLEFNOVRFLGVBQ0UsaUJBQUEsQUFDQSxrQkFBQSxDTmdVSixBTS9USSxzQkFDRSxTQUFBLENOaVVOLEFNL1RJLHdCQUNFLGNBQUEsQUFDQSxhQUFBLENOaVVOLEFNN1RJLDhCQUNFLFdBQUEsQUFDQSxXQUFBLENOK1ROLEFNN1RJLDhCQUNFLGNBQUEsQ04rVE4sQU14VEksMEJBQ0UsbUJBQUEsQ04wVE4sQU14VEkscUJBQ0UsU0FBQSxDTjBUTixDQUNGLEFNclRBLDBCQUdNLDBCQUNFLG1CQUFBLENOcVROLEFNM1NVLDhDQUVFLGdCQUFBLEFBQ0EsVUFBQSxDTjRTWixDQUNGLEFNclNBLDBCQUNFLHVCQUNFLG1CQUFBLENOdVNGLEFNclNBLFNBQ0UsYUFBQSxDTnVTRixBTXBTRSxXQUNFLFNBQUEsQ05zU0osQU1sU0UsV0FDRSxlQUFBLENOb1NKLEFNbFNFLGFBQ0UsY0FBQSxDTm9TSixBTS9SSSwwQkFDRSxrQkFBQSxDTmlTTixDQUNGIiwiZmlsZSI6InN0eWxlLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMSU5LSSBETyBDWkNDSU9ORUsgQ1NTISEhISFcclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IGhhbGxpZTI7XHJcbiAgc3JjOiB1cmwoLi9mb250cy9IYWxsaWV0aG9tcHNvbnNlcmlmZGVtby50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogY29ybW9yYW50O1xyXG4gIHNyYzogdXJsKC4vZm9udHMvQ29ybW9yYW50R2FyYW1vbmQtTWVkaXVtLnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcclxuICBzcmM6IHVybCguL2ZvbnRzL09wZW5TYW5zLUxpZ2h0LnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogaGFsbGllMTtcclxuICBzcmM6IHVybCgvZGlzdC9jc3MvZm9udHMvSGFsbGlldGhvbXBzb25zY3JpcHRkZW1vLnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBoYWxsaWUyO1xyXG4gIHNyYzogdXJsKC9kaXN0L2Nzcy9mb250cy9IYWxsaWV0aG9tcHNvbnNlcmlmZGVtby50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogY29ybW9yYW50O1xyXG4gIHNyYzogdXJsKC9kaXN0L2Nzcy9mb250cy9Db3Jtb3JhbnRHYXJhbW9uZC1NZWRpdW0udHRmKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcclxuICBzcmM6IHVybCgvZGlzdC9jc3MvZm9udHMvT3BlblNhbnNfU2VtaUNvbmRlbnNlZC1MaWdodC50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxufVxyXG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IGhhbGxpZTI7XG4gIHNyYzogdXJsKC4vZm9udHMvSGFsbGlldGhvbXBzb25zZXJpZmRlbW8udHRmKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogY29ybW9yYW50O1xuICBzcmM6IHVybCguL2ZvbnRzL0Nvcm1vcmFudEdhcmFtb25kLU1lZGl1bS50dGYpIGZvcm1hdChcInRydWV0eXBlXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcbiAgc3JjOiB1cmwoLi9mb250cy9PcGVuU2Fucy1MaWdodC50dGYpIGZvcm1hdChcInRydWV0eXBlXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBoYWxsaWUxO1xuICBzcmM6IHVybCgvZGlzdC9jc3MvZm9udHMvSGFsbGlldGhvbXBzb25zY3JpcHRkZW1vLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IGhhbGxpZTI7XG4gIHNyYzogdXJsKC9kaXN0L2Nzcy9mb250cy9IYWxsaWV0aG9tcHNvbnNlcmlmZGVtby50dGYpIGZvcm1hdChcInRydWV0eXBlXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XG4gIHNyYzogdXJsKC9kaXN0L2Nzcy9mb250cy9Db3Jtb3JhbnRHYXJhbW9uZC1NZWRpdW0udHRmKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogb3BlbnNhbnM7XG4gIHNyYzogdXJsKC9kaXN0L2Nzcy9mb250cy9PcGVuU2Fuc19TZW1pQ29uZGVuc2VkLUxpZ2h0LnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG4qLFxuKjo6YWZ0ZXIsXG4qOjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgc2Nyb2xsLXBhZGRpbmctdG9wOiA4dmg7XG59XG5cbmJvZHkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgei1pbmRleDogMjtcbn1cblxuaDIuc2VjdGlvbl9faGVhZGluZyB7XG4gIHBhZGRpbmc6IDFlbSAxZW0gMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMi44cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgZm9udC1mYW1pbHk6IGNvcm1vcmFudDtcbn1cblxuaDMuc2VjdGlvbl9fc3ViaGVhZGluZyB7XG4gIHBhZGRpbmc6IDEuNWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XG59XG5cbi5zZWN0aW9uIHtcbiAgbWFyZ2luOiA1ZW0gMCA1ZW07XG59XG5cbi53cmFwcGVyIHtcbiAgcGFkZGluZzogMCAxZW07XG59XG5cbi5tYWluIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luOiAxZW0gYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC1mYW1pbHk6IG9wZW5zYW5zO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuLm1haW4gLmluc3RydWN0aW9ucyAuc3RlcHMge1xuICBwYWRkaW5nOiAxZW07XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggI2QwZGNlODtcbn1cbi5tYWluIC5pbnN0cnVjdGlvbnMgLnN0ZXBzIC5zdGVwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMWVtIDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4ubWFpbiAuaW5zdHJ1Y3Rpb25zIC5zdGVwcyAuc3RlcF9faGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QwZGNlODtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC1mYW1pbHk6IGNvcm1vcmFudDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7XG59XG4ubWFpbiAuaW5zdHJ1Y3Rpb25zIC5zdGVwcyAuc3RlcF9faGVhZGVyOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwJTtcbiAgd2lkdGg6IDkwdnc7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBkY2U4O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cyBzY2FsZSAwLjVzO1xufVxuLm1haW4gLmluc3RydWN0aW9ucyAuc3RlcHMgLnN0ZXBfX2NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDFlbSAwO1xufVxuLm1haW4gLmluc3RydWN0aW9ucyAuc3RlcHMgLnN0ZXBfX2NvbnRlbnQtaW1nIHtcbiAgbWF4LWhlaWdodDogMjB2dztcbiAgd2lkdGg6IDI4dnc7XG4gIG1hcmdpbi1sZWZ0OiAwJTtcbn1cbi5tYWluIC5pbnN0cnVjdGlvbnMgLnN0ZXBzIC5zdGVwX19jb250ZW50LWltZyBpbWcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1haW4gLmluc3RydWN0aW9ucyAuc3RlcHMgLnN0ZXBfX2NvbnRlbnQtbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAxMCU7XG59XG4ubWFpbiAucGF0dGVybnMge1xuICBtYXJnaW46IDNlbSAwO1xufVxuLm1haW4gLnBhdHRlcm5zIC5zd2lwZXIge1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICB3aWR0aDogOTAlO1xuICBoZWlnaHQ6IDcwdmg7XG59XG4ubWFpbiAucGF0dGVybnMgLnN3aXBlci1zbGlkZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xufVxuLm1haW4gLnBhdHRlcm5zIC5zd2lwZXItc2xpZGUgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDk4JTtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbn1cbi5tYWluIC5vZmVydHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuLm1haW4gLm9mZXJ0cyAuc2xpZGVzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMC41ZW07XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDgwJTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggI2QwZGNlODtcbn1cbi5tYWluIC5vZmVydHMgLnNsaWRlcyAuc2xpZGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXgtZ3JvdzogMC43O1xuICBoZWlnaHQ6IDEwJTtcbiAgbWluLWhlaWdodDogNXJlbTtcbiAgbWFyZ2luOiAwLjVlbTtcbiAgcGFkZGluZzogMCAwLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBmbGV4LWdyb3cgMC41cztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLm1haW4gLm9mZXJ0cyAuc2xpZGVzIC5zbGlkZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb3BhY2l0eTogMC41O1xufVxuLm1haW4gLm9mZXJ0cyAuc2xpZGVzIC5zbGlkZS5zdGFuZGFyZDpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBkY2U4O1xufVxuLm1haW4gLm9mZXJ0cyAuc2xpZGVzIC5zbGlkZS5wcmVtaXVtOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOGRjZDA7XG59XG4ubWFpbiAub2ZlcnRzIC5zbGlkZXMgLnNsaWRlLmRlbHV4ZTpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDdjM2FlO1xufVxuLm1haW4gLm9mZXJ0cyAuc2xpZGVzIC5zbGlkZV9fdGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG59XG4ubWFpbiAub2ZlcnRzIC5zbGlkZXMgLnNsaWRlX190ZXh0LWhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMWVtIDAgMWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbn1cbi5tYWluIC5vZmVydHMgLnNsaWRlcyAuc2xpZGUuYWN0aXZlIHtcbiAgZmxleC1ncm93OiAyMDtcbn1cbi5tYWluIC5vZmVydHMgLnNsaWRlcyAuc2xpZGUgLnNsaWRlX190ZXh0LmFjdGl2ZSBwIHtcbiAgYW5pbWF0aW9uOiBzaG93YmcgMXMgMC42cyBib3RoO1xufVxuXG5Aa2V5ZnJhbWVzIHNob3diZyB7XG4gIHRvIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgc2hvdy10ZXh0IHtcbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5jb250YWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThkY2QwO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCAjZDBkY2U4O1xufVxuLmNvbnRhY3QgLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmb250LWZhbWlseTogb3BlbnNhbnM7XG4gIHBhZGRpbmc6IDFlbTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59XG4uY29udGFjdCAuZm9ybV9faGVhZGluZyB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZmZmZjtcbn1cbi5jb250YWN0IC5mb3JtX19zcGFjZXIge1xuICBtYXJnaW46IDFyZW0gMDtcbn1cbi5jb250YWN0IC5mb3JtX19sYWJlbCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4uY29udGFjdCAuZm9ybV9faW5wdXQge1xuICBib3JkZXI6IDJweCBzb2xpZCAjZmZmZmZmO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG59XG4uY29udGFjdCAuZm9ybV9fbWVzc2FnZSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDE1ZW07XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG59XG4uY29udGFjdCAuZm9ybV9fc3VibWl0IHtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuLmNvbnRhY3RfX21lc3NhZ2Utc3RhdHVzIHtcbiAgZGlzcGxheTogbm9uZTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAyNSU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiA3MCU7XG4gIGhlaWdodDogMzAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDdjM2FlO1xuICBib3JkZXI6IDRweCBzb2xpZCAjZmZmZmZmO1xufVxuLmNvbnRhY3RfX21lc3NhZ2Utc3RhdHVzLWljb24ge1xuICBtYXJnaW46IDFlbTtcbiAgd2lkdGg6IDRyZW07XG4gIGhlaWdodDogNHJlbTtcbn1cbi5jb250YWN0X19tZXNzYWdlLXN0YXR1cy1pbmZvIHtcbiAgcGFkZGluZzogMC41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IGNvcm1vcmFudDtcbn1cblxuLmJ0bixcbi5oZWFkZXJfX2J0biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC41ZW0gMmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0biB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3M7XG59XG5cbi5idG46aG92ZXIsIC5idG46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXItY29sb3I6ICNmZmZmZmY7XG59XG5cbi5oZWFkZXJfX2J0bjo6YWZ0ZXIsXG4uaGVhZGVyX19idG46OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiA1MCU7XG4gIHdpZHRoOiAxMCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIGhlaWdodCAwLjNzO1xufVxuXG4uaGVhZGVyX19idG46OmFmdGVyIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNmZmY7XG4gIGJvcmRlci10b3A6IDNweCBzb2xpZCAjZmZmO1xufVxuXG4uaGVhZGVyX19idG46OmJlZm9yZSB7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjZmZmO1xuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjZmZmO1xufVxuXG4uaGVhZGVyX19idG46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4uaGVhZGVyX19idG46aG92ZXI6OmJlZm9yZSxcbi5oZWFkZXJfX2J0bjpmb2N1czo6YmVmb3JlLFxuLmhlYWRlcl9fYnRuOmhvdmVyOjphZnRlcixcbi5oZWFkZXJfX2J0bjpmb2N1czo6YWZ0ZXIge1xuICBvdXRsaW5lOiBub25lO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5Aa2V5ZnJhbWVzIG5hdkFuaW1hdGlvbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjAwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgfVxufVxuQGtleWZyYW1lcyBtYWtlU3BhY2VMZWZ0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTJyZW0pO1xuICB9XG59XG5Aa2V5ZnJhbWVzIG1ha2VTcGFjZVJpZ2h0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMnJlbSk7XG4gIH1cbn1cbi5uYXYge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAwLjhlbTtcbiAgaGVpZ2h0OiA2LjV2aDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDdjM2FlO1xuICB6LWluZGV4OiAxMDA7XG59XG4ubmF2X19pdGVtcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogMC44ZW0gYXV0bztcbiAgd2lkdGg6IDkwJTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMHZoO1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDdjM2FlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cbi5uYXZfX2l0ZW1zLS1hY3RpdmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG4ubmF2X19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDJyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XG59XG4ubmF2X19uYW1lIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgZm9udC1mYW1pbHk6IGhhbGxpZTI7XG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xuICBsZXR0ZXItc3BhY2luZzogM3B4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZmZmZjtcbiAgb3BhY2l0eTogMDtcbn1cbi5uYXYgLmxvZ28ge1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgd2lkdGg6IDE1cmVtO1xuICBoZWlnaHQ6IDE1cmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkICNlOGRjZDA7XG59XG4ubmF2IC5idXJnZXItYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbGVmdDogMC41ZW07XG4gIHdpZHRoOiA1cmVtO1xuICBoZWlnaHQ6IDNyZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDUlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuICB6LWluZGV4OiAxMDAwO1xufVxuLm5hdiAuYnVyZ2VyLWJ0bl9fYmFycyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDYwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG59XG4ubmF2IC5idXJnZXItYnRuX19iYXJzOjpiZWZvcmUsIC5uYXYgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xufVxuLm5hdiAuYnVyZ2VyLWJ0bl9fYmFyczo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMXB4KTtcbn1cbi5uYXYgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDExcHgpO1xufVxuLm5hdiAub3BlbiB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLm5hdiAub3Blbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xufVxuLm5hdiAub3Blbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4ubmF2LWFuaW1hdGlvbiB7XG4gIGFuaW1hdGlvbjogbmF2QW5pbWF0aW9uIDAuNXMgYm90aDtcbn1cblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgaHNsKDMxLCAzNCUsIDc2JSkgNDAlLCBoc2woMzAsIDM0JSwgODElKSA3MCUsIGhzbCgzMCwgMzQlLCA4NiUpIDEwMCUpO1xufVxuLmhlYWRlciBoMSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiA0cmVtO1xuICBmb250LWZhbWlseTogXCJoYWxsaWUyXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogMTAwO1xuICBsZXR0ZXItc3BhY2luZzogNXB4O1xufVxuLmhlYWRlciBhIHtcbiAgaGVpZ2h0OiAwO1xuICBtYXJnaW46IDA7XG59XG4uaGVhZGVyIGE6aG92ZXIsXG4uaGVhZGVyIGE6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLmhlYWRlcl9fYnRuIHtcbiAgbWFyZ2luLXRvcDogMmVtO1xuICBwYWRkaW5nOiAxZW0gMmVtO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuZm9vdGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QwZGNlODtcbiAgd2lkdGg6IDEwMHZ3O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuZm9vdGVyIC5mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbmZvb3RlciAuZm9vdGVyX19jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAwLjFyZW0gMWVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwLjVlbSAwO1xufVxuZm9vdGVyIC5mb290ZXJfX2ljb24tYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG4gIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIHRyYW5zaXRpb246IHNjYWxlIDAuMnM7XG59XG5mb290ZXIgLmZvb3Rlcl9faW5mby1pY29uIHtcbiAgbWFyZ2luOiAwLjNlbTtcbiAgd2lkdGg6IDIuNXJlbTtcbiAgaGVpZ2h0OiAyLjVyZW07XG4gIHotaW5kZXg6IDM7XG4gIHRyYW5zaXRpb246IHNjYWxlIDAuMnM7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmZvb3RlciAuZm9vdGVyX19pbmZvLWljb246aG92ZXIsXG5mb290ZXIgLmZvb3Rlcl9faW5mby1pY29uIDpmb2N1cyB7XG4gIHNjYWxlOiAxLjE1O1xufVxuZm9vdGVyIC5mb290ZXJfX2xvZ28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAtNSU7XG4gIHRvcDogY2FsYyg1MCUgLSAxMmVtKTtcbiAgei1pbmRleDogMDtcbn1cbmZvb3RlciAuZm9vdGVyX19sb2dvLWljb24ge1xuICB3aWR0aDogMTVlbTtcbiAgaGVpZ2h0OiAxNWVtO1xufVxuZm9vdGVyIC5mb290ZXJfX2NvbXBhbnktbmFtZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogM2VtO1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgZm9udC1mYW1pbHk6IFwiaGFsbGllMlwiO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbmZvb3RlciAuZm9vdGVyX19jb21wYW55LW5hbWU6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDEwMHZ3O1xuICB0b3A6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwO1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbn1cbmZvb3RlciAuZm9vdGVyX19jb21wYW55LW5hbWUteWVhciB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAzMDBweCkge1xuICAuaGVhZGVyIGgxIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmhlYWRlcl9fYnRuIHtcbiAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDMwMHB4KSB7XG4gIGgyLnNlY3Rpb25fX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xuICB9XG4gIC5oZWFkZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogNC44cmVtO1xuICB9XG4gIC5oZWFkZXJfX2J0biB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMC4xcmVtIDNyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28ge1xuICAgIHJpZ2h0OiAwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIGgyLnNlY3Rpb25fX2hlYWRpbmcge1xuICAgIHBhZGRpbmc6IDFlbSAwZW0gMWVtO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICBoMy5zZWN0aW9uX19zdWJoZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDIuM3JlbTtcbiAgfVxuICAubmF2IC5idXJnZXItYnRuIHtcbiAgICBoZWlnaHQ6IDcwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG4gIH1cbiAgLmhlYWRlciBoMSB7XG4gICAgZm9udC1zaXplOiA4cmVtO1xuICB9XG4gIC5oZWFkZXJfX2J0biB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMHJlbSA1cmVtO1xuICB9XG4gIGZvb3RlciAuZm9vdGVyX19pY29uLWJveCB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28ge1xuICAgIHRvcDogY2FsYyg1MCUgLSAxN2VtKTtcbiAgICByaWdodDogMCU7XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28taWNvbiB7XG4gICAgd2lkdGg6IDMwZW07XG4gICAgaGVpZ2h0OiAzMGVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5hdiB7XG4gICAgaGVpZ2h0OiA3dmg7XG4gIH1cbiAgLmhlYWRlciBoMSB7XG4gICAgZm9udC1zaXplOiA5cmVtO1xuICB9XG4gIC5oZWFkZXJfX2J0biB7XG4gICAgbWFyZ2luLXRvcDogM2VtO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICBmb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwLjVyZW0gNnJlbTtcbiAgfVxuICBmb290ZXIgLmZvb3Rlcl9faWNvbi1ib3gge1xuICAgIHBhZGRpbmc6IDAuNWVtIDA7XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28ge1xuICAgIHJpZ2h0OiA1JTtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMTdlbSk7XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28taWNvbiB7XG4gICAgd2lkdGg6IDMwZW07XG4gICAgaGVpZ2h0OiAzMGVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgaDIuc2VjdGlvbl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA0LjRyZW07XG4gIH1cbiAgaDMuc2VjdGlvbl9fc3ViaGVhZGluZyB7XG4gICAgcGFkZGluZzogMC41ZW0gMCAxLjVlbTtcbiAgICBmb250LXNpemU6IDIuNnJlbTtcbiAgfVxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAzZW07XG4gIH1cbiAgLndyYXBwZXIgaDIuc2VjdGlvbl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA0cmVtO1xuICB9XG4gIC5uYXYge1xuICAgIGhlaWdodDogOHZoO1xuICB9XG4gIC5uYXZfX2l0ZW0tLW1vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAubmF2X19pdGVtLS1tb2JpbGVfX21vYmlsZS1uYW1lIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5uYXZfX2l0ZW1zIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgd2lkdGg6IDU1JTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuICAubmF2X19pdGVtIHtcbiAgICBtYXJnaW46IDAgMXJlbTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG4gIC5uYXYgLmxvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0xMCU7XG4gICAgbGVmdDogLTM1JTtcbiAgICB3aWR0aDogMTJyZW07XG4gICAgaGVpZ2h0OiAxMnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIH1cbiAgLm5hdl9fbmFtZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIC5uYXYgLmJ1cmdlci1idG4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLm1haW4gLm9mZXJ0cyAuc2xpZGVzIC5zbGlkZSB7XG4gICAgbWFyZ2luOiAwLjVlbTtcbiAgICBwYWRkaW5nOiAwIDAuNWVtO1xuICB9XG4gIC5tYWluIC5vZmVydHMgLnNsaWRlcyAuc2xpZGVfX3RleHQtaGVhZGluZyB7XG4gICAgcGFkZGluZzogMC43NWVtIDAgMWVtO1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG4gIC5jb250YWN0IHtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgfVxuICAuY29udGFjdCAuZm9ybSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAuY29udGFjdCAuZm9ybV9faW5wdXQge1xuICAgIHdpZHRoOiA2NSU7XG4gIH1cbiAgLmNvbnRhY3QgLmZvcm1fX21lc3NhZ2Uge1xuICAgIG1heC13aWR0aDogNzAlO1xuICAgIG1pbi13aWR0aDogNzAlO1xuICB9XG4gIC5jb250YWN0X19tZXNzYWdlLXN0YXR1cy1pY29uIHtcbiAgICB3aWR0aDogNXJlbTtcbiAgICBoZWlnaHQ6IDVyZW07XG4gIH1cbiAgLmNvbnRhY3RfX21lc3NhZ2Utc3RhdHVzLWluZm8ge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICBmb290ZXIgLmZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwLjVyZW0gMTJyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2xvZ28ge1xuICAgIHJpZ2h0OiAxMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMC41cmVtIDE0cmVtO1xuICB9XG4gIC5tYWluIC5pbnN0cnVjdGlvbnMgLnN0ZXBzIC5zdGVwX19jb250ZW50LWltZyB7XG4gICAgbWF4LWhlaWdodDogMTd2dztcbiAgICB3aWR0aDogMTd2dztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICBoMy5zZWN0aW9uX19zdWJoZWFkaW5nIHtcbiAgICBwYWRkaW5nOiAwLjZlbSAwIDAuOGVtO1xuICB9XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDhlbTtcbiAgfVxuICAubmF2IC5sb2dvIHtcbiAgICBsZWZ0OiAtMzQlO1xuICB9XG4gIC5oZWFkZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogMTByZW07XG4gIH1cbiAgLmhlYWRlcl9fYnRuIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgZm9vdGVyIC5mb290ZXJfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMC41cmVtIDIwZW07XG4gIH1cbn0iLCIqLFxyXG4qOjphZnRlcixcclxuKjo6YmVmb3JlIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5odG1sIHtcclxuICBmb250LXNpemU6IDYyLjUlO1xyXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xyXG4gIHNjcm9sbC1wYWRkaW5nLXRvcDogOHZoO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbn1cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbmgyLnNlY3Rpb25fX2hlYWRpbmcge1xyXG4gIHBhZGRpbmc6IDFlbSAxZW0gMWVtO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDIuOHJlbTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XHJcbn1cclxuXHJcbmgzLnNlY3Rpb25fX3N1YmhlYWRpbmcge1xyXG4gIHBhZGRpbmc6IDEuNWVtO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDJyZW07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICBmb250LWZhbWlseTogY29ybW9yYW50O1xyXG59XHJcbi5zZWN0aW9uIHtcclxuICBtYXJnaW46IDVlbSAwIDVlbTtcclxufVxyXG4ud3JhcHBlciB7XHJcbiAgcGFkZGluZzogMCAxZW07XHJcbn1cclxuIiwiQHVzZSAnY29sb3JzJyBhcyAqO1xyXG5AdXNlICdmb250cycgYXMgKjtcclxuLy9NQUlOXHJcbi5tYWluIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWFyZ2luOiAxZW0gYXV0bztcclxuICAvLyBwYWRkaW5nOiAwIDFlbTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXgtd2lkdGg6IDE0MDBweDtcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBmb250LWZhbWlseTogb3BlbnNhbnM7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuXHJcbiAgLmluc3RydWN0aW9ucyB7XHJcbiAgICAvLyBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLy8gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIC8vIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgIC5zdGVwcyB7XHJcbiAgICAgIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZS1jb2xvcjtcclxuICAgICAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggJHNlY29uZGFyeS1jb2xvcjtcclxuXHJcbiAgICAgIC5zdGVwIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDFlbSAwO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgJl9faGVhZGVyIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgICBjb2xvcjogJHdoaXRlLWNvbG9yO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IGNvcm1vcmFudDtcclxuXHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcclxuICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDkwdnc7XHJcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cyBzY2FsZSAwLjVzO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fY29udGVudCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgICAgICAgICYtaW1nIHtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogMjB2dztcclxuICAgICAgICAgICAgd2lkdGg6IDI4dnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwJTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLWxpc3Qge1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9TV0lQRVJcclxuICAucGF0dGVybnMge1xyXG4gICAgbWFyZ2luOiAzZW0gMDtcclxuICAgIC5zd2lwZXIge1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgICB3aWR0aDogOTAlO1xyXG4gICAgICBoZWlnaHQ6IDcwdmg7XHJcbiAgICB9XHJcblxyXG4gICAgLnN3aXBlci1zbGlkZSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkd2hpdGUtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgLnN3aXBlci1zbGlkZSBpbWcge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogOTglO1xyXG4gICAgICBvYmplY3QtZml0OiBjb250YWluO1xyXG4gICAgfVxyXG4gIH1cclxuICAvL0RST1AtRE9XTlxyXG4gIC5vZmVydHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcblxyXG4gICAgLnNsaWRlcyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiA4MCU7XHJcbiAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggNXB4ICRzZWNvbmRhcnktY29sb3I7XHJcblxyXG4gICAgICAuc2xpZGUge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBmbGV4LWdyb3c6IDAuNztcclxuICAgICAgICBoZWlnaHQ6IDEwJTtcclxuICAgICAgICBtaW4taGVpZ2h0OiA1cmVtO1xyXG4gICAgICAgIG1hcmdpbjogMC41ZW07XHJcbiAgICAgICAgcGFkZGluZzogMCAwLjVlbTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBmbGV4LWdyb3cgMC41cztcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLnN0YW5kYXJkOmJlZm9yZSB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLnByZW1pdW06YmVmb3JlIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmRlbHV4ZTpiZWZvcmUge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW4tZGFya2VyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICB6LWluZGV4OiAxMDtcclxuXHJcbiAgICAgICAgICAmLWhlYWRpbmcge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDAgMWVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCRjb2xvcjogIzAwMDAwMCwgJGFscGhhOiAwLjUpO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogY29ybW9yYW50O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYuYWN0aXZlIHtcclxuICAgICAgICAgIGZsZXgtZ3JvdzogMjA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc2xpZGVfX3RleHQuYWN0aXZlIHtcclxuICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICBhbmltYXRpb246IHNob3diZyAxcyAwLjZzIGJvdGg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbkBrZXlmcmFtZXMgc2hvd2JnIHtcclxuICB0byB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbiAgfVxyXG59XHJcbkBrZXlmcmFtZXMgc2hvdy10ZXh0IHtcclxuICB0byB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxufVxyXG4vL0tPTlRBS1RcclxuLmNvbnRhY3Qge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCAkc2Vjb25kYXJ5LWNvbG9yO1xyXG5cclxuICAuZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZm9udC1mYW1pbHk6IG9wZW5zYW5zO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcblxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgIGNvbG9yOiAkd2hpdGUtY29sb3I7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkd2hpdGUtY29sb3I7XHJcbiAgICB9XHJcbiAgICAmX19zcGFjZXIge1xyXG4gICAgICBtYXJnaW46IDFyZW0gMDtcclxuICAgIH1cclxuICAgICZfX2xhYmVsIHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuICAgICZfX2lucHV0IHtcclxuICAgICAgYm9yZGVyOiAycHggc29saWQgJHdoaXRlLWNvbG9yO1xyXG4gICAgICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICB9XHJcbiAgICAmX19tZXNzYWdlIHtcclxuICAgICAgYm9yZGVyOiAycHggc29saWQgJHdoaXRlLWNvbG9yO1xyXG4gICAgICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICBtaW4taGVpZ2h0OiAxNWVtO1xyXG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgfVxyXG4gICAgJl9fc3VibWl0IHtcclxuICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICBjb2xvcjogJHdoaXRlLWNvbG9yO1xyXG4gICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICZfX21lc3NhZ2Utc3RhdHVzIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAyNSU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDMwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWRhcmtlcjtcclxuICAgIGJvcmRlcjogNHB4IHNvbGlkICR3aGl0ZS1jb2xvcjtcclxuXHJcbiAgICAmLWljb24ge1xyXG4gICAgICBtYXJnaW46IDFlbTtcclxuICAgICAgd2lkdGg6IDRyZW07XHJcbiAgICAgIGhlaWdodDogNHJlbTtcclxuICAgIH1cclxuICAgICYtaW5mbyB7XHJcbiAgICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgY29sb3I6ICR3aGl0ZS1jb2xvcjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgZm9udC1mYW1pbHk6IGNvcm1vcmFudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiJG1haW4tY29sb3I6ICNlOGRjZDA7XHJcbiRzZWNvbmRhcnktY29sb3I6ICNkMGRjZTg7XHJcbiRtYWluLWRhcmtlcjogI2Q3YzNhZTtcclxuJHdoaXRlLWNvbG9yOiAjZmZmZmZmO1xyXG4kZGFyay1mb250OiAjMzMzMzMzO1xyXG4kcGluazogI0U4RDBFOCA7IiwiQHVzZSAnY29sb3JzJyBhcyAqO1xyXG5AdXNlICdmb250cycgYXMgKjtcclxuXHJcbi5idG4sXHJcbi5oZWFkZXJfX2J0biB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHBhZGRpbmc6IDAuNWVtIDJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcblxyXG5cclxuLmJ0biB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LWZhbWlseTogc2VyaWY7XHJcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcztcclxufVxyXG4uYnRuOmhvdmVyLCAuYnRuOmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogJHdoaXRlLWNvbG9yO1xyXG59XHJcblxyXG4vLy9IRUFERVJcclxuLmhlYWRlcl9fYnRuOjphZnRlcixcclxuLmhlYWRlcl9fYnRuOjpiZWZvcmUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDUwJTtcclxuICB3aWR0aDogMTAlO1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG4gIHRyYW5zaXRpb246IHdpZHRoIDAuM3MsIGhlaWdodCAwLjNzO1xyXG59XHJcbi5oZWFkZXJfX2J0bjo6YWZ0ZXIge1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2ZmZjtcclxuICBib3JkZXItdG9wOiAzcHggc29saWQgI2ZmZjtcclxufVxyXG5cclxuLmhlYWRlcl9fYnRuOjpiZWZvcmUge1xyXG4gIGJvdHRvbTogMDtcclxuICByaWdodDogMDtcclxuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2ZmZjtcclxuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjZmZmO1xyXG59XHJcblxyXG4uaGVhZGVyX19idG46Zm9jdXN7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG4uaGVhZGVyX19idG46aG92ZXI6OmJlZm9yZSxcclxuLmhlYWRlcl9fYnRuOmZvY3VzOjpiZWZvcmUsXHJcbi5oZWFkZXJfX2J0bjpob3Zlcjo6YWZ0ZXIsXHJcbi5oZWFkZXJfX2J0bjpmb2N1czo6YWZ0ZXIge1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIkBrZXlmcmFtZXMgbmF2QW5pbWF0aW9uIHtcclxuXHQwJXtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMDAlKTtcclxuXHR9XHJcblxyXG5cdDEwMCV7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCUpO1xyXG5cdH1cclxufVxyXG5Aa2V5ZnJhbWVzIG1ha2VTcGFjZUxlZnQge1xyXG5cdDAle1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG5cdH1cclxuXHJcblx0MTAwJXtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMnJlbSk7XHJcblx0fVxyXG5cclxufVxyXG5Aa2V5ZnJhbWVzIG1ha2VTcGFjZVJpZ2h0IHtcclxuXHQwJXtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuXHR9XHJcblxyXG5cdDEwMCV7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMnJlbSk7XHJcblx0fVxyXG5cclxufSIsIkB1c2UgJ3V0aWxpdGllcycgYXMgKjtcclxuXHJcbi8vTkFWXHJcbi5uYXYge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwYWRkaW5nOiAwLjhlbTtcclxuICBoZWlnaHQ6IDYuNXZoO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1kYXJrZXI7XHJcbiAgei1pbmRleDogMTAwO1xyXG5cclxuICAmX19pdGVtcyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbjogMC44ZW0gYXV0bztcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogMHZoO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGNvbG9yOiAkd2hpdGUtY29sb3I7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1kYXJrZXI7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XHJcbiAgICAmLS1hY3RpdmUge1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gICZfX2l0ZW0ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtZmFtaWx5OiBjb3Jtb3JhbnQ7XHJcbiAgfVxyXG5cclxuICAmX19uYW1lIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBmb250LWZhbWlseTogaGFsbGllMjtcclxuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDNweDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkd2hpdGUtY29sb3I7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuICAubG9nbyB7XHJcbiAgICAvLyBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xyXG4gICAgbWFyZ2luLXRvcDogMC41ZW07XHJcbiAgICB3aWR0aDogMTVyZW07XHJcbiAgICBoZWlnaHQ6IDE1cmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgJG1haW4tY29sb3I7XHJcbiAgfVxyXG4gIC5idXJnZXItYnRuIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBsZWZ0OiAwLjVlbTtcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gICAgY29sb3I6ICR3aGl0ZS1jb2xvcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1JTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuXHJcbiAgICAmX19iYXJzIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB3aWR0aDogNjAlO1xyXG4gICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlLWNvbG9yO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAmOjpiZWZvcmUsXHJcbiAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlLWNvbG9yO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcclxuICAgICAgfVxyXG4gICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTFweCk7XHJcbiAgICAgIH1cclxuICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMXB4KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAub3BlbiB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB9XHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi5uYXYtYW5pbWF0aW9uIHtcclxuICBhbmltYXRpb246IG5hdkFuaW1hdGlvbiAwLjVzIGJvdGg7XHJcbn1cclxuXHJcbi8vSEVBREVSXHJcbi5oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgMTgwZGVnLFxyXG4gICAgaHNsKDMxZGVnIDM0JSA3NiUpIDQwJSxcclxuICAgIGhzbCgzMGRlZyAzNCUgODElKSA3MCUsXHJcbiAgICBoc2woMzBkZWcgMzQlIDg2JSkgMTAwJVxyXG4gICk7XHJcblxyXG4gIGgxIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xyXG4gICAgbWF4LXdpZHRoOiA5MCU7XHJcbiAgICBjb2xvcjogJHdoaXRlLWNvbG9yO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICdoYWxsaWUyJywgc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDVweDtcclxuICB9XHJcbiAgYSB7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG4gIGE6aG92ZXIsXHJcbiAgYTpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gIH1cclxuICAmX19idG4ge1xyXG4gICAgbWFyZ2luLXRvcDogMmVtO1xyXG4gICAgcGFkZGluZzogMWVtIDJlbTtcclxuICAgIGNvbG9yOiAkd2hpdGUtY29sb3I7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiBvcGVuc2FucztcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgfVxyXG59XHJcblxyXG4vL0ZPT1RFUlxyXG5cclxuZm9vdGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICB3aWR0aDogMTAwdnc7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgLmZvb3RlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIHBhZGRpbmc6IDAuMXJlbSAxZW07XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW46IDAuNWVtIDA7XHJcbiAgICB9XHJcbiAgICAmX19pY29uLWJveCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwYWRkaW5nOiAwLjVlbSAwO1xyXG4gICAgICBmb250LWZhbWlseTogb3BlbnNhbnM7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgICB0cmFuc2l0aW9uOiBzY2FsZSAwLjJzO1xyXG4gICAgfVxyXG4gICAgJl9faW5mby1pY29uIHtcclxuICAgICAgLy8gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgLy8ganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIC8vIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIG1hcmdpbjogMC4zZW07XHJcbiAgICAgIHdpZHRoOiAyLjVyZW07XHJcbiAgICAgIGhlaWdodDogMi41cmVtO1xyXG4gICAgICB6LWluZGV4OiAzO1xyXG4gICAgICB0cmFuc2l0aW9uOiBzY2FsZSAwLjJzO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICY6aG92ZXIsXHJcbiAgICAgIDpmb2N1cyB7XHJcbiAgICAgICAgc2NhbGU6IDEuMTU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICByaWdodDogLTUlO1xyXG4gICAgICB0b3A6IGNhbGMoNTAlIC0gMTJlbSk7XHJcbiAgICAgIHotaW5kZXg6IDA7XHJcblxyXG4gICAgICAmLWljb24ge1xyXG4gICAgICAgIHdpZHRoOiAxNWVtO1xyXG4gICAgICAgIGhlaWdodDogMTVlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbXBhbnktbmFtZSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGhlaWdodDogM2VtO1xyXG4gICAgICBmb250LXNpemU6IDEuM3JlbTtcclxuICAgICAgZm9udC1mYW1pbHk6ICdoYWxsaWUyJztcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICB9XHJcbiAgICAgICYteWVhciB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4vL01FRElBIFFVRVJJRVNcclxuQG1lZGlhIChtaW4td2lkdGg6IDMwMHB4KSB7XHJcbiAgLmhlYWRlciB7XHJcbiAgICBoMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIH1cclxuICAgICZfX2J0biB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy9NRURJQSBRVUVSSUVTXHJcbkBtZWRpYSAobWluLXdpZHRoOiAzMDBweCkge1xyXG4gIGgyLnNlY3Rpb25fX2hlYWRpbmcge1xyXG4gICAgZm9udC1zaXplOiAzLjVyZW07XHJcbiAgfVxyXG4gIC8vIGgzLnNlY3Rpb25fX3N1YmhlYWRpbmcge1xyXG4gIC8vICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgLy8gfVxyXG4gIC5oZWFkZXIge1xyXG4gICAgaDEge1xyXG4gICAgICBmb250LXNpemU6IDQuOHJlbTtcclxuICAgIH1cclxuICAgICZfX2J0biB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuICBmb290ZXIge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgcGFkZGluZzogMC4xcmVtIDNyZW07XHJcbiAgICAgIH1cclxuICAgICAgJl9fbG9nbyB7XHJcbiAgICAgICAgcmlnaHQ6IDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcclxuICBoMi5zZWN0aW9uX19oZWFkaW5nIHtcclxuICAgIHBhZGRpbmc6IDFlbSAwZW0gMWVtO1xyXG4gICAgZm9udC1zaXplOiA0cmVtO1xyXG4gIH1cclxuICBoMy5zZWN0aW9uX19zdWJoZWFkaW5nIHtcclxuICAgIC8vIHBhZGRpbmc6IDAuN2VtO1xyXG4gICAgZm9udC1zaXplOiAyLjNyZW07XHJcbiAgfVxyXG4gIC5uYXYge1xyXG4gICAgLmJ1cmdlci1idG4ge1xyXG4gICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgIHdpZHRoOiA3MHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmhlYWRlciB7XHJcbiAgICBoMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogOHJlbTtcclxuICAgIH1cclxuICAgICZfX2J0biB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZm9vdGVyIHtcclxuICAgIC5mb290ZXIge1xyXG4gICAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDByZW0gNXJlbTtcclxuICAgICAgfVxyXG4gICAgICAmX19pY29uLWJveCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgICAgIH1cclxuICAgICAgJl9fbG9nbyB7XHJcbiAgICAgICAgdG9wOiBjYWxjKDUwJSAtIDE3ZW0pO1xyXG4gICAgICAgIHJpZ2h0OiAwJTtcclxuXHJcbiAgICAgICAgJi1pY29uIHtcclxuICAgICAgICAgIHdpZHRoOiAzMGVtO1xyXG4gICAgICAgICAgaGVpZ2h0OiAzMGVtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgLm5hdiB7XHJcbiAgICBoZWlnaHQ6IDd2aDtcclxuICB9XHJcbiAgLmhlYWRlciB7XHJcbiAgICBoMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogOXJlbTtcclxuICAgIH1cclxuICAgICZfX2J0biB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDNlbTtcclxuICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZm9vdGVyIHtcclxuICAgIC5mb290ZXIge1xyXG4gICAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSA2cmVtO1xyXG4gICAgICB9XHJcbiAgICAgICZfX2ljb24tYm94IHtcclxuICAgICAgICBwYWRkaW5nOiAwLjVlbSAwO1xyXG4gICAgICB9XHJcbiAgICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHJpZ2h0OiA1JTtcclxuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gMTdlbSk7XHJcblxyXG4gICAgICAgICYtaWNvbiB7XHJcbiAgICAgICAgICB3aWR0aDogMzBlbTtcclxuICAgICAgICAgIGhlaWdodDogMzBlbTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4gIGgyLnNlY3Rpb25fX2hlYWRpbmcge1xyXG4gICAgZm9udC1zaXplOiA0LjRyZW07XHJcbiAgfVxyXG4gIGgzLnNlY3Rpb25fX3N1YmhlYWRpbmcge1xyXG4gICAgcGFkZGluZzogMC41ZW0gMCAxLjVlbTtcclxuICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gIH1cclxuICAud3JhcHBlciB7XHJcbiAgICBoMi5zZWN0aW9uX19oZWFkaW5nIHtcclxuICAgICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgfVxyXG4gICAgcGFkZGluZzogMCAzZW07XHJcbiAgfVxyXG4gIC5uYXYge1xyXG4gICAgaGVpZ2h0OiA4dmg7XHJcbiAgICAmX19pdGVtLS1tb2JpbGUge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgICAgJl9fbW9iaWxlLW5hbWUge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2l0ZW1zIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgd2lkdGg6IDU1JTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgIH1cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICBtYXJnaW46IDAgMXJlbTtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIH1cclxuICAgIC5sb2dvIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IC0xMCU7XHJcbiAgICAgIGxlZnQ6IC0zNSU7XHJcbiAgICAgIHdpZHRoOiAxMnJlbTtcclxuICAgICAgaGVpZ2h0OiAxMnJlbTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX25hbWUge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG5cclxuICAgIC5idXJnZXItYnRuIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbiAgLm1haW4ge1xyXG4gICAgLm9mZXJ0cyB7XHJcbiAgICAgIC5zbGlkZXMge1xyXG4gICAgICAgIC5zbGlkZSB7XHJcbiAgICAgICAgICBtYXJnaW46IDAuNWVtO1xyXG4gICAgICAgICAgcGFkZGluZzogMCAwLjVlbTtcclxuICAgICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICAmLWhlYWRpbmcge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDAuNzVlbSAwIDFlbTtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDIuNHJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNvbnRhY3Qge1xyXG4gICAgcGFkZGluZzogMCAyZW07XHJcbiAgICAuZm9ybSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAmX19pbnB1dCB7XHJcbiAgICAgICAgd2lkdGg6IDY1JTtcclxuICAgICAgfVxyXG4gICAgICAmX19tZXNzYWdlIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDcwJTtcclxuICAgICAgICBtaW4td2lkdGg6IDcwJTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fbWVzc2FnZS1zdGF0dXMge1xyXG4gICAgICAmLWljb24ge1xyXG4gICAgICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgICAgIGhlaWdodDogNXJlbTtcclxuICAgICAgfVxyXG4gICAgICAmLWluZm8ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZm9vdGVyIHtcclxuICAgIC5mb290ZXIge1xyXG4gICAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxMnJlbTtcclxuICAgICAgfVxyXG4gICAgICAmX19sb2dvIHtcclxuICAgICAgICByaWdodDogMTAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgZm9vdGVyIHtcclxuICAgIC5mb290ZXIge1xyXG4gICAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxNHJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1haW4ge1xyXG4gICAgLmluc3RydWN0aW9ucyB7XHJcbiAgICAgIC5zdGVwcyB7XHJcbiAgICAgICAgLnN0ZXAge1xyXG4gICAgICAgICAgJl9fY29udGVudCB7XHJcbiAgICAgICAgICAgICYtaW1nIHtcclxuICAgICAgICAgICAgICAvLyBtYXJnaW46IDAgNSU7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMTd2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTd2dztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XHJcbiAgaDMuc2VjdGlvbl9fc3ViaGVhZGluZyB7XHJcbiAgICBwYWRkaW5nOiAwLjZlbSAwIDAuOGVtO1xyXG4gIH1cclxuICAud3JhcHBlciB7XHJcbiAgICBwYWRkaW5nOiAwIDhlbTtcclxuICB9XHJcbiAgLm5hdiB7XHJcbiAgICAubG9nbyB7XHJcbiAgICAgIGxlZnQ6IC0zNCU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5oZWFkZXIge1xyXG4gICAgaDEge1xyXG4gICAgICBmb250LXNpemU6IDEwcmVtO1xyXG4gICAgfVxyXG4gICAgJl9fYnRuIHtcclxuICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gIH1cclxuICBmb290ZXIge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgcGFkZGluZzogMC41cmVtIDIwZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */
